#!/usr/bin/env bash

set -ex

cd /autograder

if [ ! -f 'no_lean' ]; then
  LEANFILES=$(find submission/ -mindepth 1 -maxdepth 1 -type f -name "*.lean" -printf x | wc -c)
else
  LEANFILES=0
  echo '{"tests":[]}' > /autograder/lean_results.json
fi

TEXFILES=$(find submission/ -mindepth 1 -maxdepth 1 -type f -name "*.tex" -printf x | wc -c)
PDF=$(find submission/ -mindepth 1 -maxdepth 1 -type f -name "*.pdf" -printf x | wc -c)
TEX_TEMPLATE=$1

# If neither Lean nor Tex was submitted
if [ $LEANFILES == 0 ] && [ $TEXFILES == 0 ]; then
  echo '{"tests":[{"score":0,"status":"failed","name":"No TeX or Lean files found","output":"Please submit the correct files."}]}' > results/results.json
  exit
fi

# If a PDF file was submitted
if [ $PDF == 1 ]; then
  touch /autograder/pdf_submitted
fi

# We're expecting students to submit two files, a .tex file and a .lean file, but the two autograders
# expect the submission dir to contain either one or the other. So we split them out to start.

if [ $LEANFILES == 1 ]; then 

  mkdir lean_submission
  cp submission/*.lean lean_submission/

fi
  
if [ $TEXFILES -ge 1 ]; then 

  
  curl $TEX_TEMPLATE --output template.zip 

  unzip template.zip -d tex_submission

  # Remove main.tex from template
  rm tex_submission/main.tex

  cp -r submission/* tex_submission/

fi


rm -rf submission


#########################################
##  LEAN AUTOGRADER EXECUTION
#########################################

if [ $LEANFILES == 1 ]; then 


    mv lean_submission submission
    cd lean_ag_src

    git pull

    # The following line is needed for this reason:
    # we have just pulled a new version of the course project,
    # which has the autograder as a dependency.
    # If we update the version of the autograder in that project,
    # `run_autograder_main` may change.
    # So we need to make sure that the latest versions of the dependencies are present
    # before we copy that file over.

    ~/.elan/bin/lake update

    ./.lake/packages/autograder/run_autograder_main

    cd ..


    # results.json should now contain lean results, now need to append tex results

    mv results/results.json lean_results.json


    mv submission lean_submission

fi

#########################################
##  TEX AUTOGRADER EXECUTION
#########################################



if [ $TEXFILES -ge 1 ]; then 

    mv tex_submission submission

    cd submission

    # The OR is so that a compilation failure doesn't ruin the whole autograding script.
    ../unified_ag_src/scripts/grade_tex || true

    cd ..

    mv results/results.json tex_results.json

fi

python3 unified_ag_src/scripts/combine_json.py
